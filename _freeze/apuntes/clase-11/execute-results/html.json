{
  "hash": "38b0e10d6eee7ea0dc3cc9a14d9490a1",
  "result": {
    "engine": "knitr",
    "markdown": "# Selección de variables y Regularización {-}\n\n## Questions\n\n- Si solo se usa variable respuesta, como covariable, \n¿cuánto vale el $R^2$? **Vale 0**.\n- ¿El $R^2$ ajustado puede ser negativo? \n**Sí, en casos como cuando la cantidad de covariales menor que cantidad de observaciones.**\n\n## Fijas\n\n::: {.callout-note}\n### Idea de verosimilitud\n\n¿Cuál debe ser el valor del parámetro, tal para que se haga \nmás **posible**, en caso variable aleatoria **discreto**;\nmás **plausible**, en caso variable aleatoria **continua**,\nel valor del parámetro, dados los datos?\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(Sys.Date())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2025-06-21\"\n```\n\n\n:::\n:::\n\n\n\n\n\n## Criterios de comparación de modelos\n\n**NOTA IMPORTANTE**: Los criterioes AIC, BIC, F-test y los t-test\n**dependen**, (pues suponen) de que los residuos sigan una distribución normal.\n\n### $R^2$ y $R^2$ ajustado\n\n- Recuerde que el $R^2$ ajustado puede ser negativo ... \ninterpretarlo con cuidado.\n\n### AIC\n\n**Criterio de información de Akaike**\n\n- Comparable solamente en modelos con **misma cantidad de covariables**.\n\n$$\n\\text{AIC} = -2\\log L(\\hat{\\theta}) + 2k\n$$\n\n\n- Como se busca maximiza la verisimilitud, este criterio considera \n**mejor aquel modelo con menor AIC**.\n\n### BIC\n\n**Criterio de información Bayesiano**\n\n- Penaliza **más fuerte** la complejidad del modelo, comparado a AIC.\n\n$$\n\\text{BIC} = -2\\log L(\\hat{\\theta}) + k\\log(n)\n$$\n\n\n\n::: {.callout-note}\n### Nota\n\n(Confirm with sensei)\n\nCuando se consideran modelos de igual complejidad, número de covariables\ny número de observaciones; los tests vía AIC y BIC producen el mismo resultado.\n\n:::\n\n### Criterio de Mallows ($C_p$)\n\n$$\nC_p = \\frac{1}{n} \\left(RSS + 2p\\hat{\\sigma}^2\\right)\n$$\n\n- $C_p$ es un estimador insesgado del MSE de prueba,\nsi $\\hat{\\sigma}^2$ es un estimador insesgado de $\\sigma^2$.\n\n- **Menor $C_p$ es mejor**.\n\n### Error cuadrático medio (MSE)\n\n$$\n\\text{MSE}_\\Sigma = \\frac{1}{n} ( \\mathbf{y} - \\mathbf{X} \\hat{\\boldsymbol{\\beta}} )^\\top \\Sigma^{-1} ( \\mathbf{y} - \\mathbf{X} \\hat{\\boldsymbol{\\beta}} )\n$$\n\n- **Validación cruzada**\n  - **k-fold**: Se divide la muestra en $k$ partes, se entrena el modelo en $k - 1$ y se evalúa en la restante.\n  - Evalúa capacidad de generalización del modelo.\n\n### Prueba F global\n\n- Evalúa **si al menos uno de los predictores explica significativamente la variable respuesta**.\n- No te dice cuántas ni cuáles covariables son significativas, en caso se rechaze la hipótesis nula.\n\n### Prueba t para coeficientes\n\n- Evalúa **si un predictor específico tiene efecto significativo sobre la variable respuesta**.\n- Comparado a la prueba análoga en el caso de OLS, la varianza del beta estimado considera\nla matriz de covarianza del modelo.\n\n::: {.callout-note}\n| **Criterio**                    | **¿Qué evalúa?**                       | **¿Preferencia?**        |\n|--------------------------------|----------------------------------------|---------------------------|\n| $R^2$, $R^2_{\\text{ajustado}}$ | Proporción explicada                   | Más alto mejor            |\n| AIC / BIC                      | Ajuste penalizado por complejidad      | Más bajo mejor            |\n| MSE / Validación cruzada       | Error de predicción                    | Más bajo mejor            |\n| Pruebas $t$ y $F$              | Significancia estadística              | Valores $p$ bajos         |\n\n:::\n\n\n## Selección de variables y Regularización\n\n### Selección de subconjuntos\n\nConsiste en seleccionar las **covariables más relacionadas con la variable respuesta**.\n\n- Alternativas\n    - Selección del **mejor subconjunto**\n    - Selección de modelos paso a paso (**stepwise**)\n\n### Selección del mejor subconjunto\n\n- Cuando se comparan modelos con **misma cantidad de covariables**, podemos emplear\nel $R^2$ (no ajustado) como criterio de comparación.\n\n- Cuando se comparan los últimos modelos, con diferente cantidad de covariables,\nno emplear $R^2$, sino $R^2$ ajustado o $C_p$, AIC, etc.\n\n- **Un gran espacio de búsqueda puede provocar un sobreajuste a los datos de entrenamiento**.\n\n### Stepwise\n\n- Forward stepwise\n- Backward stepwise\n\n::: {.callout-important}\n\n| Feature                  | Forward Selection | Backward Elimination |\n| ------------------------ | ----------------- | -------------------- |\n| Starts with              | No predictors     | All predictors       |\n| Adds/removes             | Adds only         | Removes only         |\n| Needs full model fit     | ❌ No              | ✅ Yes                |\n| Works when n < p         | ✅ Yes             | ❌ No                 |\n| Safer in high dimensions | ✅                 | ❌                    |\n| Can miss interactions    | ✅ Yes             | ❌ Less likely        |\n| Risk with collinearity   | Lower             | Higher               |\n\n:::\n\n::: {.callout-important}\n\n| Scenario                                     | Prefer   |\n| -------------------------------------------- | -------- |\n| **High dimensionality (many predictors)**    | Forward  |\n| **n < p (more variables than observations)** | Forward  |\n| **Strong prior knowledge of important vars** | Backward |\n| **Want to see joint variable effects early** | Backward |\n| **Low multicollinearity, sufficient data**   | Backward |\n\n:::\n\n\n## Ejemplos prácticos\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ISLR)\nlibrary(ggplot2)\n\ndata(\"Hitters\")\nnames(Hitters)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"AtBat\"     \"Hits\"      \"HmRun\"     \"Runs\"      \"RBI\"       \"Walks\"    \n [7] \"Years\"     \"CAtBat\"    \"CHits\"     \"CHmRun\"    \"CRuns\"     \"CRBI\"     \n[13] \"CWalks\"    \"League\"    \"Division\"  \"PutOuts\"   \"Assists\"   \"Errors\"   \n[19] \"Salary\"    \"NewLeague\"\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(Hitters)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t322 obs. of  20 variables:\n $ AtBat    : int  293 315 479 496 321 594 185 298 323 401 ...\n $ Hits     : int  66 81 130 141 87 169 37 73 81 92 ...\n $ HmRun    : int  1 7 18 20 10 4 1 0 6 17 ...\n $ Runs     : int  30 24 66 65 39 74 23 24 26 49 ...\n $ RBI      : int  29 38 72 78 42 51 8 24 32 66 ...\n $ Walks    : int  14 39 76 37 30 35 21 7 8 65 ...\n $ Years    : int  1 14 3 11 2 11 2 3 2 13 ...\n $ CAtBat   : int  293 3449 1624 5628 396 4408 214 509 341 5206 ...\n $ CHits    : int  66 835 457 1575 101 1133 42 108 86 1332 ...\n $ CHmRun   : int  1 69 63 225 12 19 1 0 6 253 ...\n $ CRuns    : int  30 321 224 828 48 501 30 41 32 784 ...\n $ CRBI     : int  29 414 266 838 46 336 9 37 34 890 ...\n $ CWalks   : int  14 375 263 354 33 194 24 12 8 866 ...\n $ League   : Factor w/ 2 levels \"A\",\"N\": 1 2 1 2 2 1 2 1 2 1 ...\n $ Division : Factor w/ 2 levels \"E\",\"W\": 1 2 2 1 1 2 1 2 2 1 ...\n $ PutOuts  : int  446 632 880 200 805 282 76 121 143 0 ...\n $ Assists  : int  33 43 82 11 40 421 127 283 290 0 ...\n $ Errors   : int  20 10 14 3 4 25 7 9 19 0 ...\n $ Salary   : num  NA 475 480 500 91.5 750 70 100 75 1100 ...\n $ NewLeague: Factor w/ 2 levels \"A\",\"N\": 1 2 1 2 2 1 1 1 2 1 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(Hitters)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  AtBat Hits HmRun Runs RBI Walks Years CAtBat CHits CHmRun\n-Andy Allanson      293   66     1   30  29    14     1    293    66      1\n-Alan Ashby         315   81     7   24  38    39    14   3449   835     69\n-Alvin Davis        479  130    18   66  72    76     3   1624   457     63\n-Andre Dawson       496  141    20   65  78    37    11   5628  1575    225\n-Andres Galarraga   321   87    10   39  42    30     2    396   101     12\n-Alfredo Griffin    594  169     4   74  51    35    11   4408  1133     19\n                  CRuns CRBI CWalks League Division PutOuts Assists Errors\n-Andy Allanson       30   29     14      A        E     446      33     20\n-Alan Ashby         321  414    375      N        W     632      43     10\n-Alvin Davis        224  266    263      A        W     880      82     14\n-Andre Dawson       828  838    354      N        E     200      11      3\n-Andres Galarraga    48   46     33      N        E     805      40      4\n-Alfredo Griffin    501  336    194      A        W     282     421     25\n                  Salary NewLeague\n-Andy Allanson        NA         A\n-Alan Ashby        475.0         N\n-Alvin Davis       480.0         A\n-Andre Dawson      500.0         N\n-Andres Galarraga   91.5         N\n-Alfredo Griffin   750.0         A\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(Hitters)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 322  20\n```\n\n\n:::\n\n```{.r .cell-code}\n# Eliminando datos perdidos\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nHitters = Hitters %>%\n  na.omit\n```\n:::\n\n\n\n\n\n### Mejores Subconjuntos\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaps)\n\n# Identificar el mejor modelo para un determinado numero de predictores\n# (por defecto se muestra subconjuntos hasta el tamanho 8)\nregfit.full=regsubsets(Salary~.,Hitters)\nsum8 = summary(regfit.full)\nsum8\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSubset selection object\nCall: regsubsets.formula(Salary ~ ., Hitters)\n19 Variables  (and intercept)\n           Forced in Forced out\nAtBat          FALSE      FALSE\nHits           FALSE      FALSE\nHmRun          FALSE      FALSE\nRuns           FALSE      FALSE\nRBI            FALSE      FALSE\nWalks          FALSE      FALSE\nYears          FALSE      FALSE\nCAtBat         FALSE      FALSE\nCHits          FALSE      FALSE\nCHmRun         FALSE      FALSE\nCRuns          FALSE      FALSE\nCRBI           FALSE      FALSE\nCWalks         FALSE      FALSE\nLeagueN        FALSE      FALSE\nDivisionW      FALSE      FALSE\nPutOuts        FALSE      FALSE\nAssists        FALSE      FALSE\nErrors         FALSE      FALSE\nNewLeagueN     FALSE      FALSE\n1 subsets of each size up to 8\nSelection Algorithm: exhaustive\n         AtBat Hits HmRun Runs RBI Walks Years CAtBat CHits CHmRun CRuns CRBI\n1  ( 1 ) \" \"   \" \"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n2  ( 1 ) \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n3  ( 1 ) \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n4  ( 1 ) \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n5  ( 1 ) \"*\"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n6  ( 1 ) \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n7  ( 1 ) \" \"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \"*\"   \"*\"    \" \"   \" \" \n8  ( 1 ) \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \"*\"    \"*\"   \" \" \n         CWalks LeagueN DivisionW PutOuts Assists Errors NewLeagueN\n1  ( 1 ) \" \"    \" \"     \" \"       \" \"     \" \"     \" \"    \" \"       \n2  ( 1 ) \" \"    \" \"     \" \"       \" \"     \" \"     \" \"    \" \"       \n3  ( 1 ) \" \"    \" \"     \" \"       \"*\"     \" \"     \" \"    \" \"       \n4  ( 1 ) \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n5  ( 1 ) \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n6  ( 1 ) \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n7  ( 1 ) \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n8  ( 1 ) \"*\"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n```\n\n\n:::\n\n```{.r .cell-code}\n# Para visualizar y evaluar cual subconjunto es mejor\nsummary(regfit.full)$adjr2   # R^2 ajustado\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3188503 0.4208024 0.4450753 0.4672734 0.4808971 0.4972001 0.5007849\n[8] 0.5137083\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(regfit.full)$bic     # Criterio de información bayesiano\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  -90.84637 -128.92622 -135.62693 -141.80892 -144.07143 -147.91690 -145.25594\n[8] -147.61525\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(regfit.full)$cp      # Estadístico Cp de Mallows\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 104.281319  50.723090  38.693127  27.856220  21.613011  14.023870  13.128474\n[8]   7.400719\n```\n\n\n:::\n\n```{.r .cell-code}\nwhich.min(sum8$bic) # Mejor modelo en base a BIC\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6\n```\n\n\n:::\n\n```{.r .cell-code}\nwhich.max(sum8$adjr2) # Mejor modelo en base a R2adj\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n\n```{.r .cell-code}\n# El mejor modelo basado en BIC es 6\nmod6 <- which.min(sum8$bic)\nsum8$which[mod6, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept)       AtBat        Hits       HmRun        Runs         RBI \n       TRUE        TRUE        TRUE       FALSE       FALSE       FALSE \n      Walks       Years      CAtBat       CHits      CHmRun       CRuns \n       TRUE       FALSE       FALSE       FALSE       FALSE       FALSE \n       CRBI      CWalks     LeagueN   DivisionW     PutOuts     Assists \n       TRUE       FALSE       FALSE        TRUE        TRUE       FALSE \n     Errors  NewLeagueN \n      FALSE       FALSE \n```\n\n\n:::\n\n```{.r .cell-code}\n# Covariables del modelo 6 basado en BIC\nvars6 <- names(which(sum8$which[mod6, ] == TRUE))\nvars6\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"(Intercept)\" \"AtBat\"       \"Hits\"        \"Walks\"       \"CRBI\"       \n[6] \"DivisionW\"   \"PutOuts\"    \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Incrementando el tamaho hasta 19\nregfit.full=regsubsets(Salary~.,data=Hitters,nvmax=19)\nreg.summary=summary(regfit.full)\nreg.summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSubset selection object\nCall: regsubsets.formula(Salary ~ ., data = Hitters, nvmax = 19)\n19 Variables  (and intercept)\n           Forced in Forced out\nAtBat          FALSE      FALSE\nHits           FALSE      FALSE\nHmRun          FALSE      FALSE\nRuns           FALSE      FALSE\nRBI            FALSE      FALSE\nWalks          FALSE      FALSE\nYears          FALSE      FALSE\nCAtBat         FALSE      FALSE\nCHits          FALSE      FALSE\nCHmRun         FALSE      FALSE\nCRuns          FALSE      FALSE\nCRBI           FALSE      FALSE\nCWalks         FALSE      FALSE\nLeagueN        FALSE      FALSE\nDivisionW      FALSE      FALSE\nPutOuts        FALSE      FALSE\nAssists        FALSE      FALSE\nErrors         FALSE      FALSE\nNewLeagueN     FALSE      FALSE\n1 subsets of each size up to 19\nSelection Algorithm: exhaustive\n          AtBat Hits HmRun Runs RBI Walks Years CAtBat CHits CHmRun CRuns CRBI\n1  ( 1 )  \" \"   \" \"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n2  ( 1 )  \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n3  ( 1 )  \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n4  ( 1 )  \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n5  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n6  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n7  ( 1 )  \" \"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \"*\"   \"*\"    \" \"   \" \" \n8  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \"*\"    \"*\"   \" \" \n9  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n10  ( 1 ) \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n11  ( 1 ) \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n12  ( 1 ) \"*\"   \"*\"  \" \"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n13  ( 1 ) \"*\"   \"*\"  \" \"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n14  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n15  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n16  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \" \"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n17  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \" \"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n18  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \"*\"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n19  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \"*\"   \"*\"    \"*\"   \"*\"    \"*\"   \"*\" \n          CWalks LeagueN DivisionW PutOuts Assists Errors NewLeagueN\n1  ( 1 )  \" \"    \" \"     \" \"       \" \"     \" \"     \" \"    \" \"       \n2  ( 1 )  \" \"    \" \"     \" \"       \" \"     \" \"     \" \"    \" \"       \n3  ( 1 )  \" \"    \" \"     \" \"       \"*\"     \" \"     \" \"    \" \"       \n4  ( 1 )  \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n5  ( 1 )  \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n6  ( 1 )  \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n7  ( 1 )  \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n8  ( 1 )  \"*\"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n9  ( 1 )  \"*\"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n10  ( 1 ) \"*\"    \" \"     \"*\"       \"*\"     \"*\"     \" \"    \" \"       \n11  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \" \"    \" \"       \n12  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \" \"    \" \"       \n13  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n14  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n15  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n16  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n17  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \"*\"       \n18  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \"*\"       \n19  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \"*\"       \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(reg.summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"which\"  \"rsq\"    \"rss\"    \"adjr2\"  \"cp\"     \"bic\"    \"outmat\" \"obj\"   \n```\n\n\n:::\n\n```{.r .cell-code}\n#  R2 para cada tamanho de subconjunto\nreg.summary$rsq\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0.3214501 0.4252237 0.4514294 0.4754067 0.4908036 0.5087146 0.5141227\n [8] 0.5285569 0.5346124 0.5404950 0.5426153 0.5436302 0.5444570 0.5452164\n[15] 0.5454692 0.5457656 0.5459518 0.5460945 0.5461159\n```\n\n\n:::\n\n```{.r .cell-code}\n# Grafica para los R2 (no apropiado para seleccionar modelos)\nlibrary(ggvis)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'ggvis'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:ggplot2':\n\n    resolution\n```\n\n\n:::\n\n```{.r .cell-code}\nrsq <- as.data.frame(reg.summary$rsq)\nnames(rsq) <- \"R2\"\nrsq %>% \n  ggvis(x=~ c(1:nrow(rsq)), y=~R2 ) %>%\n  layer_points(fill = ~ R2 ) %>%\n  add_axis(\"y\", title = \"R2\") %>% \n  add_axis(\"x\", title = \"Número de Variables\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"plot_id704981866-container\" class=\"ggvis-output-container\">\n<div id=\"plot_id704981866\" class=\"ggvis-output\"></div>\n<div class=\"plot-gear-icon\">\n<nav class=\"ggvis-control\">\n<a class=\"ggvis-dropdown-toggle\" title=\"Controls\" onclick=\"return false;\"></a>\n<ul class=\"ggvis-dropdown\">\n<li>\nRenderer: \n<a id=\"plot_id704981866_renderer_svg\" class=\"ggvis-renderer-button\" onclick=\"return false;\" data-plot-id=\"plot_id704981866\" data-renderer=\"svg\">SVG</a>\n | \n<a id=\"plot_id704981866_renderer_canvas\" class=\"ggvis-renderer-button\" onclick=\"return false;\" data-plot-id=\"plot_id704981866\" data-renderer=\"canvas\">Canvas</a>\n</li>\n<li>\n<a id=\"plot_id704981866_download\" class=\"ggvis-download\" data-plot-id=\"plot_id704981866\">Download</a>\n</li>\n</ul>\n</nav>\n</div>\n</div>\n<script type=\"text/javascript\">\nvar plot_id704981866_spec = {\n  \"data\": [\n    {\n      \"name\": \".0\",\n      \"format\": {\n        \"type\": \"csv\",\n        \"parse\": {\n          \"c(1:nrow(rsq))\": \"number\",\n          \"R2\": \"number\"\n        }\n      },\n      \"values\": \"\\\"c(1:nrow(rsq))\\\",\\\"R2\\\"\\n1,0.321450088667894\\n2,0.425223746466778\\n3,0.451429415717957\\n4,0.475406653394787\\n5,0.490803615963518\\n6,0.508714557358996\\n7,0.514122682361273\\n8,0.528556860302574\\n9,0.534612447792431\\n10,0.540494950940798\\n11,0.54261532542542\\n12,0.543630208632163\\n13,0.544457014231977\\n14,0.545216356301489\\n15,0.545469230681164\\n16,0.54576555748528\\n17,0.545951808076699\\n18,0.546094522341906\\n19,0.546115861912532\"\n    },\n    {\n      \"name\": \"scale/fill\",\n      \"format\": {\n        \"type\": \"csv\",\n        \"parse\": {\n          \"domain\": \"number\"\n        }\n      },\n      \"values\": \"\\\"domain\\\"\\n0.321450088667894\\n0.546115861912532\"\n    },\n    {\n      \"name\": \"scale/x\",\n      \"format\": {\n        \"type\": \"csv\",\n        \"parse\": {\n          \"domain\": \"number\"\n        }\n      },\n      \"values\": \"\\\"domain\\\"\\n0.1\\n19.9\"\n    },\n    {\n      \"name\": \"scale/y\",\n      \"format\": {\n        \"type\": \"csv\",\n        \"parse\": {\n          \"domain\": \"number\"\n        }\n      },\n      \"values\": \"\\\"domain\\\"\\n0.310216800005663\\n0.557349150574764\"\n    }\n  ],\n  \"scales\": [\n    {\n      \"name\": \"fill\",\n      \"domain\": {\n        \"data\": \"scale/fill\",\n        \"field\": \"data.domain\"\n      },\n      \"zero\": false,\n      \"nice\": false,\n      \"clamp\": false,\n      \"range\": [\"#132B43\", \"#56B1F7\"]\n    },\n    {\n      \"name\": \"x\",\n      \"domain\": {\n        \"data\": \"scale/x\",\n        \"field\": \"data.domain\"\n      },\n      \"zero\": false,\n      \"nice\": false,\n      \"clamp\": false,\n      \"range\": \"width\"\n    },\n    {\n      \"name\": \"y\",\n      \"domain\": {\n        \"data\": \"scale/y\",\n        \"field\": \"data.domain\"\n      },\n      \"zero\": false,\n      \"nice\": false,\n      \"clamp\": false,\n      \"range\": \"height\"\n    }\n  ],\n  \"marks\": [\n    {\n      \"type\": \"symbol\",\n      \"properties\": {\n        \"update\": {\n          \"size\": {\n            \"value\": 50\n          },\n          \"x\": {\n            \"scale\": \"x\",\n            \"field\": \"data.c(1:nrow(rsq))\"\n          },\n          \"y\": {\n            \"scale\": \"y\",\n            \"field\": \"data.R2\"\n          },\n          \"fill\": {\n            \"scale\": \"fill\",\n            \"field\": \"data.R2\"\n          }\n        },\n        \"ggvis\": {\n          \"data\": {\n            \"value\": \".0\"\n          }\n        }\n      },\n      \"from\": {\n        \"data\": \".0\"\n      }\n    }\n  ],\n  \"legends\": [\n    {\n      \"orient\": \"right\",\n      \"fill\": \"fill\",\n      \"title\": \"R2\"\n    }\n  ],\n  \"axes\": [\n    {\n      \"type\": \"y\",\n      \"scale\": \"y\",\n      \"orient\": \"left\",\n      \"title\": \"R2\",\n      \"layer\": \"back\",\n      \"grid\": true\n    },\n    {\n      \"type\": \"x\",\n      \"scale\": \"x\",\n      \"orient\": \"bottom\",\n      \"title\": \"Número de Variables\",\n      \"layer\": \"back\",\n      \"grid\": true\n    }\n  ],\n  \"padding\": null,\n  \"ggvis_opts\": {\n    \"keep_aspect\": false,\n    \"resizable\": true,\n    \"padding\": {},\n    \"duration\": 250,\n    \"renderer\": \"svg\",\n    \"hover_duration\": 0,\n    \"width\": 672,\n    \"height\": 480\n  },\n  \"handlers\": null\n};\nggvis.getPlot(\"plot_id704981866\").parseSpec(plot_id704981866_spec);\n</script>\n```\n\n:::\n\n```{.r .cell-code}\n# Grafica comparativa para la RSS, el R2 ajustado, Cp y BIC\npar(mfrow=c(2,2))\nplot(reg.summary$rss,xlab=\"Numero de Variables\",ylab=\"RSS\",type=\"l\")\n\nplot(reg.summary$adjr2,xlab=\"N?mero de Variables\",ylab=\"R2 Ajustado\",type=\"l\")\nwhich.max(reg.summary$adjr2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 11\n```\n\n\n:::\n\n```{.r .cell-code}\npoints(11,reg.summary$adjr2[11], col=\"red\",cex=2,pch=20)\n\nplot(reg.summary$cp,xlab=\"Numero de Variables\",ylab=\"Cp\",type='l')\nwhich.min(reg.summary$cp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10\n```\n\n\n:::\n\n```{.r .cell-code}\npoints(10,reg.summary$cp[10],col=\"red\",cex=2,pch=20)\n\nplot(reg.summary$bic,xlab=\"Numero de Variables\",ylab=\"BIC\",type='l')\nwhich.min(reg.summary$bic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6\n```\n\n\n:::\n\n```{.r .cell-code}\npoints(6,reg.summary$bic[6],col=\"red\",cex=2,pch=20)\n```\n\n::: {.cell-output-display}\n![](clase-11_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\npar(mfrow=c(1,1))\n\n# Variables seleccionadas para el mejor modelo \nplot(regfit.full,scale=\"r2\")\n```\n\n::: {.cell-output-display}\n![](clase-11_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(regfit.full,scale=\"adjr2\")\n```\n\n::: {.cell-output-display}\n![](clase-11_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(regfit.full,scale=\"Cp\")\n```\n\n::: {.cell-output-display}\n![](clase-11_files/figure-html/unnamed-chunk-3-4.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(regfit.full,scale=\"bic\")\n```\n\n::: {.cell-output-display}\n![](clase-11_files/figure-html/unnamed-chunk-3-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# Coeficientes asociados al mejor modelo con 6 variables segun BIC\ncoef(regfit.full,6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept)        AtBat         Hits        Walks         CRBI    DivisionW \n  91.5117981   -1.8685892    7.6043976    3.6976468    0.6430169 -122.9515338 \n     PutOuts \n   0.2643076 \n```\n\n\n:::\n\n```{.r .cell-code}\n# El mejor modelo basado en BIC\nmodbic <- which.min(reg.summary$bic)\nreg.summary$which[modbic, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept)       AtBat        Hits       HmRun        Runs         RBI \n       TRUE        TRUE        TRUE       FALSE       FALSE       FALSE \n      Walks       Years      CAtBat       CHits      CHmRun       CRuns \n       TRUE       FALSE       FALSE       FALSE       FALSE       FALSE \n       CRBI      CWalks     LeagueN   DivisionW     PutOuts     Assists \n       TRUE       FALSE       FALSE        TRUE        TRUE       FALSE \n     Errors  NewLeagueN \n      FALSE       FALSE \n```\n\n\n:::\n\n```{.r .cell-code}\n# Covariables del modelo 6 basado en BIC\nvarsbic <- names(which(reg.summary$which[modbic, ] == TRUE))\nvarsbic\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"(Intercept)\" \"AtBat\"       \"Hits\"        \"Walks\"       \"CRBI\"       \n[6] \"DivisionW\"   \"PutOuts\"    \n```\n\n\n:::\n:::\n\n\n\n\n\n### Seleccion paso a paso hacia adelante\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregfit.fwd <- regsubsets(\n  Salary ~ .,\n  data = Hitters,\n  nvmax = 19,\n  method = \"forward\"\n)\nsummary(regfit.fwd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSubset selection object\nCall: regsubsets.formula(Salary ~ ., data = Hitters, nvmax = 19, method = \"forward\")\n19 Variables  (and intercept)\n           Forced in Forced out\nAtBat          FALSE      FALSE\nHits           FALSE      FALSE\nHmRun          FALSE      FALSE\nRuns           FALSE      FALSE\nRBI            FALSE      FALSE\nWalks          FALSE      FALSE\nYears          FALSE      FALSE\nCAtBat         FALSE      FALSE\nCHits          FALSE      FALSE\nCHmRun         FALSE      FALSE\nCRuns          FALSE      FALSE\nCRBI           FALSE      FALSE\nCWalks         FALSE      FALSE\nLeagueN        FALSE      FALSE\nDivisionW      FALSE      FALSE\nPutOuts        FALSE      FALSE\nAssists        FALSE      FALSE\nErrors         FALSE      FALSE\nNewLeagueN     FALSE      FALSE\n1 subsets of each size up to 19\nSelection Algorithm: forward\n          AtBat Hits HmRun Runs RBI Walks Years CAtBat CHits CHmRun CRuns CRBI\n1  ( 1 )  \" \"   \" \"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n2  ( 1 )  \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n3  ( 1 )  \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n4  ( 1 )  \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n5  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n6  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n7  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \" \"    \" \"   \"*\" \n8  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \" \"    \"*\"   \"*\" \n9  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n10  ( 1 ) \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n11  ( 1 ) \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n12  ( 1 ) \"*\"   \"*\"  \" \"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n13  ( 1 ) \"*\"   \"*\"  \" \"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n14  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n15  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n16  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \" \"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n17  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \" \"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n18  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \"*\"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n19  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \"*\"   \"*\"    \"*\"   \"*\"    \"*\"   \"*\" \n          CWalks LeagueN DivisionW PutOuts Assists Errors NewLeagueN\n1  ( 1 )  \" \"    \" \"     \" \"       \" \"     \" \"     \" \"    \" \"       \n2  ( 1 )  \" \"    \" \"     \" \"       \" \"     \" \"     \" \"    \" \"       \n3  ( 1 )  \" \"    \" \"     \" \"       \"*\"     \" \"     \" \"    \" \"       \n4  ( 1 )  \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n5  ( 1 )  \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n6  ( 1 )  \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n7  ( 1 )  \"*\"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n8  ( 1 )  \"*\"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n9  ( 1 )  \"*\"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n10  ( 1 ) \"*\"    \" \"     \"*\"       \"*\"     \"*\"     \" \"    \" \"       \n11  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \" \"    \" \"       \n12  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \" \"    \" \"       \n13  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n14  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n15  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n16  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n17  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \"*\"       \n18  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \"*\"       \n19  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \"*\"       \n```\n\n\n:::\n\n```{.r .cell-code}\n# Mejor modelo segun el Cp\nplot(regfit.fwd, scale = \"Cp\")\n```\n\n::: {.cell-output-display}\n![](clase-11_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### Selección paso a paso hacia atrás\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregfit.bwd <- regsubsets(\n  Salary ~ .,\n  data = Hitters,\n  nvmax = 19,\n  method=\"backward\"\n)\nsummary(regfit.bwd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSubset selection object\nCall: regsubsets.formula(Salary ~ ., data = Hitters, nvmax = 19, method = \"backward\")\n19 Variables  (and intercept)\n           Forced in Forced out\nAtBat          FALSE      FALSE\nHits           FALSE      FALSE\nHmRun          FALSE      FALSE\nRuns           FALSE      FALSE\nRBI            FALSE      FALSE\nWalks          FALSE      FALSE\nYears          FALSE      FALSE\nCAtBat         FALSE      FALSE\nCHits          FALSE      FALSE\nCHmRun         FALSE      FALSE\nCRuns          FALSE      FALSE\nCRBI           FALSE      FALSE\nCWalks         FALSE      FALSE\nLeagueN        FALSE      FALSE\nDivisionW      FALSE      FALSE\nPutOuts        FALSE      FALSE\nAssists        FALSE      FALSE\nErrors         FALSE      FALSE\nNewLeagueN     FALSE      FALSE\n1 subsets of each size up to 19\nSelection Algorithm: backward\n          AtBat Hits HmRun Runs RBI Walks Years CAtBat CHits CHmRun CRuns CRBI\n1  ( 1 )  \" \"   \" \"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \"*\"   \" \" \n2  ( 1 )  \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \"*\"   \" \" \n3  ( 1 )  \" \"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \"*\"   \" \" \n4  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \" \"   \" \"   \" \"    \" \"   \" \"    \"*\"   \" \" \n5  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \" \"    \"*\"   \" \" \n6  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \" \"    \"*\"   \" \" \n7  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \" \"    \"*\"   \" \" \n8  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \" \"    \" \"   \" \"    \"*\"   \"*\" \n9  ( 1 )  \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n10  ( 1 ) \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n11  ( 1 ) \"*\"   \"*\"  \" \"   \" \"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n12  ( 1 ) \"*\"   \"*\"  \" \"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n13  ( 1 ) \"*\"   \"*\"  \" \"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n14  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \" \"   \" \"    \"*\"   \"*\" \n15  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \" \" \"*\"   \" \"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n16  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \" \"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n17  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \" \"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n18  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \"*\"   \"*\"    \"*\"   \" \"    \"*\"   \"*\" \n19  ( 1 ) \"*\"   \"*\"  \"*\"   \"*\"  \"*\" \"*\"   \"*\"   \"*\"    \"*\"   \"*\"    \"*\"   \"*\" \n          CWalks LeagueN DivisionW PutOuts Assists Errors NewLeagueN\n1  ( 1 )  \" \"    \" \"     \" \"       \" \"     \" \"     \" \"    \" \"       \n2  ( 1 )  \" \"    \" \"     \" \"       \" \"     \" \"     \" \"    \" \"       \n3  ( 1 )  \" \"    \" \"     \" \"       \"*\"     \" \"     \" \"    \" \"       \n4  ( 1 )  \" \"    \" \"     \" \"       \"*\"     \" \"     \" \"    \" \"       \n5  ( 1 )  \" \"    \" \"     \" \"       \"*\"     \" \"     \" \"    \" \"       \n6  ( 1 )  \" \"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n7  ( 1 )  \"*\"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n8  ( 1 )  \"*\"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n9  ( 1 )  \"*\"    \" \"     \"*\"       \"*\"     \" \"     \" \"    \" \"       \n10  ( 1 ) \"*\"    \" \"     \"*\"       \"*\"     \"*\"     \" \"    \" \"       \n11  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \" \"    \" \"       \n12  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \" \"    \" \"       \n13  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n14  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n15  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n16  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \" \"       \n17  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \"*\"       \n18  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \"*\"       \n19  ( 1 ) \"*\"    \"*\"     \"*\"       \"*\"     \"*\"     \"*\"    \"*\"       \n```\n\n\n:::\n\n```{.r .cell-code}\n# Comparando el mejor modelo con 6 variables\ncoef(regfit.full,6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept)        AtBat         Hits        Walks         CRBI    DivisionW \n  91.5117981   -1.8685892    7.6043976    3.6976468    0.6430169 -122.9515338 \n     PutOuts \n   0.2643076 \n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(regfit.fwd,6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept)        AtBat         Hits        Walks         CRBI    DivisionW \n  91.5117981   -1.8685892    7.6043976    3.6976468    0.6430169 -122.9515338 \n     PutOuts \n   0.2643076 \n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(regfit.bwd,6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept)        AtBat         Hits        Walks        CRuns    DivisionW \n  78.2664070   -1.8158931    7.3597644    3.5123248    0.6187876 -113.7958600 \n     PutOuts \n   0.2995788 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Comparando el mejor modelo con 7 variables\ncoef(regfit.full,7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept)         Hits        Walks       CAtBat        CHits       CHmRun \n  79.4509472    1.2833513    3.2274264   -0.3752350    1.4957073    1.4420538 \n   DivisionW      PutOuts \n-129.9866432    0.2366813 \n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(regfit.fwd,7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept)        AtBat         Hits        Walks         CRBI       CWalks \n 109.7873062   -1.9588851    7.4498772    4.9131401    0.8537622   -0.3053070 \n   DivisionW      PutOuts \n-127.1223928    0.2533404 \n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(regfit.bwd,7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept)        AtBat         Hits        Walks        CRuns       CWalks \n 105.6487488   -1.9762838    6.7574914    6.0558691    1.1293095   -0.7163346 \n   DivisionW      PutOuts \n-116.1692169    0.3028847 \n```\n\n\n:::\n:::\n\n\n\n\n\n### Seleccion de modelos usando el esquema de validación\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nHitters = Hitters %>%\n  na.omit\n\nset.seed(1)\ntrain <- sample(c(TRUE,FALSE), nrow(Hitters),rep=TRUE)\ntest <- (!train)\n\n# Mejores subconjuntos en los datos de entrenamiento\nregfit.best <- regsubsets(Salary~.,data=Hitters[train,], nvmax=19)\n\n# Matriz de disenho para las regresiones\n# (regsubsets no tiene metodo predict)\ntest.mat <- model.matrix(Salary~.,data=Hitters[test,])\n\n# Calcular el error en el conjunto de validacion\nval.errors <- rep(NA,19)\n\n# iterar para cada tama?o i\nfor(i in 1:19) {\n  # Extraer el vector de predictores del mejor modelo con i predictores\n  coefi=coef(regfit.best,id=i)\n  \n  # Realiza las predicciones multplicando los coeficientes por la matriz de dise?o \n  pred=test.mat[,names(coefi)]%*%coefi\n  \n  # Calculo del MSE\n  val.errors[i] <- mean((Hitters$Salary[test]-pred)^2)\n}\nval.errors\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 164377.3 144405.5 152175.7 145198.4 137902.1 139175.7 126849.0 136191.4\n [9] 132889.6 135434.9 136963.3 140694.9 140690.9 141951.2 141508.2 142164.4\n[17] 141767.4 142339.6 142238.2\n```\n\n\n:::\n\n```{.r .cell-code}\n# Encontrar el modelo con el menor MSE \nmin = which.min(val.errors)\nmin\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7\n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(regfit.best, min)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n (Intercept)        AtBat         Hits        Walks        CRuns       CWalks \n  67.1085369   -2.1462987    7.0149547    8.0716640    1.2425113   -0.8337844 \n   DivisionW      PutOuts \n-118.4364998    0.2526925 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "clase-11_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/jquery-1.11.0/jquery.min.js\"></script>\n<script src=\"../site_libs/detect-resize-0.5.3/jquery.resize.js\"></script>\n<link href=\"../site_libs/jquery-ui-1.11.4/jquery-ui.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/jquery-ui-1.11.4/jquery-ui.min.js\"></script>\n<script src=\"../site_libs/d3-3.5.2/d3.min.js\"></script>\n<script src=\"../site_libs/vega-1.4.3/vega.min.js\"></script>\n<script src=\"../site_libs/lodash-4.17.21/lodash.min.js\"></script>\n<script>var lodash = _.noConflict();</script>\n<link href=\"../site_libs/ggvis-0.4.9/css/ggvis.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/ggvis-0.4.9/js/ggvis.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}